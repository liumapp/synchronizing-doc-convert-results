<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.0.2.RELEASE</version>
  </parent>

  <groupId>com.liumapp.demo.convert.sync</groupId>
  <artifactId>synchronizing-doc-convert-results</artifactId>
  <version>v2.1.0</version>
  <packaging>jar</packaging>

  <properties>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.version>1.8</java.version>
  </properties>

  <developers>
    <developer>
      <name>liumapp</name>
      <email>liumapp.com@gmail.com</email>
      <url>http://www.liumapp.com</url>
    </developer>
  </developers>

  <name>synchronizing-doc-convert-results</name>
  <url>http://maven.apache.org</url>

  <repositories>
    <repository>
      <id>liumapp</id>
      <url>http://www.liumapp.com:8081/repository/liumapp/</url>
    </repository>
  </repositories>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-websocket</artifactId>
    </dependency>
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>fastjson</artifactId>
      <version>1.2.15</version>
    </dependency>

    <!--convert base64 doc to pdf require  -->
    <dependency>
        <groupId>com.liumapp.qtools.starter.springboot</groupId>
        <artifactId>qtools-spring-boot-starter</artifactId>
        <version>v1.2.2</version>
    </dependency>

    <!--http util-->
    <dependency>
      <groupId>com.liumapp.qtools.http</groupId>
      <artifactId>qtools-http</artifactId>
      <version>v1.2.1</version>
    </dependency>

    <!--convert doc-->
    <dependency>
      <groupId>com.liumapp.convert.doc</groupId>
      <artifactId>convert-doc-to-pdf</artifactId>
      <version>v1.0.0</version>
    </dependency>

    <!--rabbit mq require-->
    <dependency>
        <groupId>com.liumapp.rabbitmq</groupId>
        <artifactId>rabbitmq-operator</artifactId>
        <version>v2.0.1</version>
    </dependency>

    <!--ui require-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-thymeleaf</artifactId>
    </dependency>
    <dependency>
      <groupId>net.sourceforge.nekohtml</groupId>
      <artifactId>nekohtml</artifactId>
      <version>1.9.22</version>
    </dependency>
  </dependencies>

  <build>
    <!--handle woff fonts error-->
    <resources>
      <resource>
        <directory>${project.basedir}/src/main/resources</directory>
        <filtering>false</filtering>
        <excludes>
          <exclude>static/static/fonts/**</exclude>
        </excludes>
      </resource>
      <resource>
        <directory>${project.basedir}/src/main/resources</directory>
        <filtering>false</filtering>
        <includes>
          <include>static/static/fonts/**</include>
        </includes>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>1.0.0</version>
        <configuration>
          <imageName>liumapp/${project.artifactId}:${project.version}</imageName>
          <baseImage>java:8</baseImage>
          <entryPoint>["java", "-jar", "/${project.build.finalName}.jar"]</entryPoint>
          <resources>
            <resource>
              <targetPath>/</targetPath>
              <directory>${project.build.directory}</directory>
              <include>${project.build.finalName}.jar</include>
            </resource>
          </resources>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
